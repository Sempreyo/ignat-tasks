{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.module.css","assets/images/avatar.jpg","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","api/api.js","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","cl","message","photo","src","avatar","alt","content","author","name","groupText","messageText","time","AlternativeMessage","messageAlt","messageData","messageData2","HW1","Affair","affair","s","priority","red","yellow","green","removeBtn","onClick","deleteAffairCallback","_id","width","height","viewBox","xmlns","d","SuperButton","restProps","finalClassName","default","Affairs","mappedAffairs","data","map","a","key","list","filterBtns","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","item","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","field","e","currentTarget","value","Greeting","users","setName","addUser","totalUsers","container","addBtn","usersList","user","country","city","GreetingContainer","addUserCallback","setCountry","setCity","useEffect","axios","get","then","response","country_name","length","trim","alert","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","App","block","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fdc59852.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__G4zsB\",\"addBtn\":\"Greeting_addBtn__GaqRf\",\"totalUsers\":\"Greeting_totalUsers__2W8gy\",\"usersList\":\"Greeting_usersList__xRkmE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__nyF2A\",\"red\":\"SuperButton_red__2zf3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"SuperCheckbox_field__1M6zX\",\"checkbox\":\"SuperCheckbox_checkbox__i3Hjd\",\"spanClassName\":\"SuperCheckbox_spanClassName__mZRXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__3IDpl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1i5L0\",\"messageAlt\":\"Message_messageAlt__1nDZ4\",\"photo\":\"Message_photo__3w_Dt\",\"content\":\"Message_content__3yIgw\",\"author\":\"Message_author__3lj-n\",\"groupText\":\"Message_groupText__1BBNH\",\"messageText\":\"Message_messageText__38sus\",\"time\":\"Message_time__kSSam\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.cfd8c3ed.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2pqR4\",\"block\":\"App_block__1k5UU\",\"title\":\"App_title__2MImj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Affairs_list__3MR58\",\"filterBtns\":\"Affairs_filterBtns__r2oOB\",\"removeBtn\":\"Affairs_removeBtn__1zVJ_\",\"priority\":\"Affairs_priority__3lRZF\",\"red\":\"Affairs_red__3ZLCL\",\"yellow\":\"Affairs_yellow__SnpaD\",\"green\":\"Affairs_green__3P1Sq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"SuperInputText_field__2yg2d\",\"superInput\":\"SuperInputText_superInput__2nKbe\",\"errorInput\":\"SuperInputText_errorInput__3wsnp\",\"error\":\"SuperInputText_error__MEOi3\"};","import React from 'react'\nimport cl from './Message.module.css';\n\nexport type PropsMessage = {\n\tavatar?: string\n\tname: string\n\tmessage: string\n\ttime: string\n}\n\nfunction Message(props: PropsMessage) {\n\treturn (\n\t\t<div className={cl.message}>\n\t\t\t<div className={cl.photo}>\n\t\t\t\t<img src={props.avatar} alt=''/>\n\t\t\t</div>\n\t\t\t<div className={cl.content}>\n\t\t\t\t<div className={cl.author}>{props.name}</div>\n\t\t\t\t<div className={cl.groupText}>\n\t\t\t\t\t<div className={cl.messageText}>{props.message}</div>\n\t\t\t\t\t<div className={cl.time}>{props.time}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Message\n","import React from 'react'\nimport cl from './Message.module.css';\nimport {PropsMessage} from './Message';\nimport avatar from '../../assets/images/avatar.jpg'\n\nfunction AlternativeMessage(props: PropsMessage) {\n\treturn (\n\t\t<div className={cl.messageAlt}>\n\t\t\t<div className={cl.photo}>\n\t\t\t\t<img src={avatar} alt=''/>\n\t\t\t</div>\n\t\t\t<div className={cl.content}>\n\t\t\t\t<div className={cl.author}>{props.name}</div>\n\t\t\t\t<div className={cl.groupText}>\n\t\t\t\t\t<div className={cl.messageText}>{props.message}</div>\n\t\t\t\t\t<div className={cl.time}>{props.time}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AlternativeMessage\n","import React from 'react'\nimport Message from './Message';\nimport AlternativeMessage from './AlternativeMessage';\n\nconst messageData = {\n\tavatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n\tname: 'Manager',\n\tmessage: 'Hello, is it Mark? Have we met before?',\n\ttime: '22:00',\n}\n\nconst messageData2 = {\n\tname: 'Director',\n\tmessage: 'I am indeed! And you must be James? Thank you for joining us in our studio today!',\n\ttime: '22:04',\n}\n\nfunction HW1() {\n\treturn (\n\t\t<div>\n\t\t\t<Message\n\t\t\t\tavatar={messageData.avatar}\n\t\t\t\tname={messageData.name}\n\t\t\t\tmessage={messageData.message}\n\t\t\t\ttime={messageData.time}\n\t\t\t/>\n\n\t\t\t<AlternativeMessage\n\t\t\t\tname={messageData2.name}\n\t\t\t\tmessage={messageData2.message}\n\t\t\t\ttime={messageData2.time}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default HW1\n","import React from 'react'\nimport s from './Affairs.module.css'\nimport {AffairType} from './HW2';\n\ntype AffairPropsType = {\n\t// key не нужно типизировать\n\taffair: AffairType // need to fix any\n\tdeleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n\tconst deleteCallback = () => {\n\t\tprops.deleteAffairCallback(props.affair._id)\n\t}// need to fix\n\n\treturn (\n\t\t<li>\n\t\t\t<p>{props.affair.name}</p>\n\t\t\t<p\n\t\t\t\tclassName={`${s.priority} ${props.affair.priority === 'high' ? s.red : props.affair.priority === 'middle' ? s.yellow : s.green}`}>{props.affair.priority}</p>\n\t\t\t<button className={s.removeBtn} onClick={deleteCallback}>\n\t\t\t\t<svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M7.29325,7.29325 C7.65417308,6.93232692 8.22044527,6.90456361 8.61296051,7.20996006 L8.70725,7.29325 L12.00025,10.58625 L15.29325,7.29325 C15.68425,6.90225 16.31625,6.90225 16.70725,7.29325 C17.0681731,7.65417308 17.0959364,8.22044527 16.7905399,8.61296051 L16.70725,8.70725 L13.41425,12.00025 L16.70725,15.29325 C17.09825,15.68425 17.09825,16.31625 16.70725,16.70725 C16.51225,16.90225 16.25625,17.00025 16.00025,17.00025 C15.7869167,17.00025 15.5735833,16.9321944 15.3955509,16.796662 L15.29325,16.70725 L12.00025,13.41425 L8.70725,16.70725 C8.51225,16.90225 8.25625,17.00025 8.00025,17.00025 C7.74425,17.00025 7.48825,16.90225 7.29325,16.70725 C6.93232692,16.3463269 6.90456361,15.7800547 7.20996006,15.3875395 L7.29325,15.29325 L10.58625,12.00025 L7.29325,8.70725 C6.90225,8.31625 6.90225,7.68425 7.29325,7.29325 Z\"/>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t</li>\n\t)\n}\n\nexport default Affair\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? `${s.default} ${s.red}` : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport Affair from './Affair'\nimport s from './Affairs.module.css'\nimport {AffairType, FilterType} from './HW2'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\n\ntype AffairsPropsType = { // need to fix any\n\tdata: Array<AffairType>\n\tsetFilter: (filter: FilterType) => void\n\tdeleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\tconst mappedAffairs = props.data.map((a: AffairType) => (\n\t\t<Affair // should work\n\t\t\tkey={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n\t\t\taffair={a}\n\t\t\tdeleteAffairCallback={props.deleteAffairCallback}\n\t\t/>\n\t))\n\n\tconst setAll = () => {\n\t\tprops.setFilter('all');\n\t} // need to fix\n\tconst setHigh = () => {\n\t\tprops.setFilter('high');\n\t}\n\tconst setMiddle = () => {\n\t\tprops.setFilter('middle');\n\t}\n\tconst setLow = () => {\n\t\tprops.setFilter('low');\n\t}\n\n\treturn (\n\t\t<div className='container'>\n\n\t\t\t<ul className={s.list}>\n\t\t\t\t{mappedAffairs}\n\t\t\t</ul>\n\n      <div className={s.filterBtns}>\n\t\t\t\t<SuperButton onClick={setAll}>All</SuperButton>\n\t\t\t\t<SuperButton onClick={setHigh}>High</SuperButton>\n\t\t\t\t<SuperButton onClick={setMiddle}>Middle</SuperButton>\n\t\t\t\t<SuperButton onClick={setLow}>Low</SuperButton>\n      </div>\n\t\t</div>\n\t)\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any\nexport type AffairType = {\n\t_id: number\n\tname: string\n\tpriority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n\t{_id: 1, name: 'React', priority: 'high'},\n\t{_id: 2, name: 'Anime', priority: 'low'},\n\t{_id: 3, name: 'Games', priority: 'low'},\n\t{_id: 4, name: 'Work', priority: 'high'},\n\t{_id: 5, name: 'Html & Css', priority: 'middle'},\n\t{_id: 6, name: 'React', priority: 'high'},\n\t{_id: 7, name: 'Anime', priority: 'low'},\n\t{_id: 8, name: 'Games', priority: 'low'},\n\t{_id: 9, name: 'Work', priority: 'high'},\n\t{_id: 10, name: 'Html & Css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n\tif (filter === 'all') return affairs\n\telse return affairs.filter(item => item.priority === filter)// need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n\treturn affairs.filter(item => item._id !== _id)// need to fix\n}\n\nfunction HW2() {\n\tconst [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n\tconst [filter, setFilter] = useState<FilterType>('all')\n\n\tconst filteredAffairs = filterAffairs(affairs, filter)\n\tconst deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n\treturn (\n\t\t<div>\n\t\t\t{/*should work (должно работать)*/}\n\t\t\t<Affairs\n\t\t\t\tdata={filteredAffairs}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t\tdeleteAffairCallback={deleteAffairCallback}\n\t\t\t/>\n\n\t\t\t{/*для личного творчества, могу проверить*/}\n\t\t\t{/*<AlternativeAffairs/>*/}\n\t\t</div>\n\t)\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput + ' ' + s.superInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <div className={s.field}>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    )\n}\n\nexport default SuperInputText\n","import React from 'react'\nimport s from './Greeting.module.css'\nimport {UserType} from './HW3';\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\n\ntype GreetingPropsType = {\n    users: UserType[]\n    name: string // need to fix any\n    setName: (value: string) => void\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {users, name, setName, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    return (\n        <div className={`container ${s.container}`}>\n            <SuperInputText\n              value={name}\n              onChangeText={setName}\n              onEnter={addUser}\n              error={error}\n            />\n            <SuperButton onClick={addUser} className={s.addBtn}>Add</SuperButton>\n            {/*<button className='btn' onClick={addUser}>Add</button>*/}\n            <div className={s.totalUsers}>\n              Количество новых пользователей: <span>{totalUsers}</span>\n            </div>\n            <ol className={s.usersList}>\n              {\n                users.map(user => {\n                  return (\n                    <li key={user._id}>\n                      <p>{user.name}</p>\n                      <p>{`Вы находитесь в ${user.country}, ${user.city}`}</p>\n                      <p>Оставайтесь на месте, за вами уже выехали</p>\n                    </li>\n                  )\n                })\n              }\n            </ol>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useEffect, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3';\nimport {getGeolocation} from '../../api/api';\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string, country: string, city: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [country, setCountry] = useState<string>('')\n    const [city, setCity] = useState<string>('')\n    const error = name ? '' : 'Field is required!'\n\n    useEffect(() => {\n        getGeolocation().then((response: any) => {\n            setCountry(response.data.country_name)\n            setCity(response.data.city)\n        })\n    }, [])\n\n    const addUser = () => {\n        if (name.trim() !== '') {\n            alert(`Hello ${name}!`) // need to fix\n            addUserCallback(name.trim(), country, city)\n            setName('')\n        }\n    }\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n      <Greeting\n        users={users}\n        name={name}\n        setName={setName}\n        addUser={addUser}\n        error={error}\n        totalUsers={totalUsers}\n      />\n    )\n}\n\nexport default GreetingContainer\n","import axios from 'axios';\r\n\r\nexport const getGeolocation = () => {\r\n\treturn axios.get('https://geolocation-db.com/json/')\r\n}","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n    country: string\n    city: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string, country: string, city: string) => { // need to fix any\n        setUsers([\n            ...users,\n            {\n                _id: v1(),\n                name: name,\n                country: country,\n                city: city\n            }\n        ]) // need to fix\n    }\n\n    return (\n      <div>\n          {/*should work (должно работать)*/}\n          <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n          {/*для личного творчества, могу проверить*/}\n          {/*<AlternativeGreeting/>*/}\n      </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChangeChecked && onChangeChecked(e.currentTarget.checked) // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.field}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <b></b>\n            {\n              children && <span className={s.spanClassName}>{children}</span>\n            }\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                    className='btn'\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    Some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\n\nfunction App() {\n\treturn (\n\t\t<div className={s.App}>\n\t\t\t<div className={s.block}>\n\t\t\t\t<div className={s.title}>Homework 1</div>\n\t\t\t\t<HW1/>\n\t\t\t</div>\n\t\t\t<div className={s.block}>\n\t\t\t\t<div className={s.title}>Homework 2</div>\n\t\t\t\t<HW2/>\n\t\t\t</div>\n\t\t\t<div className={s.block}>\n\t\t\t\t<div className={s.title}>Homework 3</div>\n\t\t\t\t<HW3/>\n\t\t\t</div>\n\t\t\t<div className={s.block}>\n\t\t\t\t<div className={s.title}>Homework 4</div>\n\t\t\t\t<HW4/>\n\t\t\t</div>\n\t\t\t{/*<HW5/>*/}\n\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}